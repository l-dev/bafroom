{"version":3,"sources":["Components/List.js","Components/Map.js","Components/Show.js","Components/Home.js","Components/test.js","Components/Detail.js","App.js","serviceWorker.js","index.js"],"names":["List","props","getRestaurantsFromApi","locationSearched","setState","loading","axios","get","headers","Authorization","process","then","res","console","log","data","businesses","results","catch","err","errorState","state","this","prevProps","prevState","searchLocationQuery","bathroomList","map","result","pathname","id","to","name","location","address1","city","Component","mapStyles","position","width","height","CurrentLocation","initialCenter","lat","lng","currentLocation","google","loadMap","recenterMap","current","maps","center","LatLng","panTo","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","mapRef","refs","node","ReactDOM","findDOMNode","zoom","mapConfig","Object","assign","Map","children","React","Children","c","cloneElement","mapCenter","style","ref","renderChildren","className","defaultProps","visible","Maps","showingInfoWindow","activeMarker","selectedPlace","coordinates","onMarkerClick","marker","onClose","markers","onClick","GoogleApiWrapper","apiKey","Home","src","e","business","index","key","href","Detail","handleSubmit","post","reviews","response","error","grabReviews","fetch","json","review","componentDidMount","display_address","url","bind","handleChange","match","params","rating","newRating","preventDefault","target","value","onSubmit","type","onChange","renderStarIcon","changeRating","numberOfStars","App","path","component","Test","exact","Show","Boolean","window","hostname","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"iTAyEeA,G,kBAlEb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAmBRC,sBAAwB,SAAAC,GACtB,EAAKC,SAAS,CAAEC,SAAS,IACzBC,IACGC,IACI,uCAFP,6DAEmGJ,GAC/F,CACEK,QAAS,CACPC,cAAc,UAAD,OAAYC,oIACzB,+BAA+B,KAIpCC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,KAAKC,YACrB,EAAKZ,SAAS,CAAEa,QAASL,EAAIG,KAAKC,WAAYX,SAAS,OAExDa,OAAM,SAAAC,GACL,EAAKf,SAAS,CACZgB,WAAW,oCACXf,SAAS,QArCf,EAAKgB,MAAQ,CACXJ,QAAS,GACTZ,SAAS,GAJM,E,iFAQjBiB,KAAKpB,sBAAsB,e,yCAEVqB,EAAWC,GAAY,IAAD,OACnCF,KAAKrB,MAAMwB,sBAAwBF,EAAUE,qBAC/CH,KAAKlB,SACH,CACEa,QAAS,KAEX,kBAAM,EAAKf,sBAAsB,EAAKD,MAAMwB,0B,+BA6BhD,IAAMC,EAAeJ,KAAKD,MAAMJ,QAAQU,KAAI,SAAAC,GAE1C,IAAIC,EAAQ,kBAAcD,EAAOE,IACjC,OAEE,6BAEE,4BAAI,kBAAC,IAAD,CAAMC,GAAIF,GAAWD,EAAOI,OAChC,2BAAIJ,EAAOK,SAASC,SAApB,KAAgCN,EAAOK,SAASE,UAKtD,OACI,6BACKT,O,GA7DMU,cCAbC,EACC,CACHC,SAAU,WACVC,MAAO,MACPC,OAAQ,QAINC,E,YACJ,WAAYxC,GAAQ,IAAD,6BACjB,4CAAMA,KACoBA,MAAMyC,cAAxBC,EAFS,EAETA,IAAKC,EAFI,EAEJA,IAFI,OAIjB,EAAKvB,MAAQ,CACXwB,gBAAiB,CACfF,IAAKA,EACLC,IAAKA,IAPQ,E,gFAYArB,EAAWC,GACxBD,EAAUuB,SAAWxB,KAAKrB,MAAM6C,QAClCxB,KAAKyB,UAEHvB,EAAUqB,kBAAoBvB,KAAKD,MAAMwB,iBAC3CvB,KAAK0B,gB,oCAIP,IAAMrB,EAAML,KAAKK,IACXsB,EAAU3B,KAAKD,MAAMwB,gBAErBK,EADS5B,KAAKrB,MAAM6C,OACNI,KACpB,GAAIvB,EAAK,CACP,IAAIwB,EAAS,IAAID,EAAKE,OAAOH,EAAQN,IAAKM,EAAQL,KAClDjB,EAAI0B,MAAMF,M,0CAGO,IAAD,OACd7B,KAAKrB,MAAMqD,6BACTC,WAAaA,UAAUC,aACzBD,UAAUC,YAAYC,oBAAmB,SAAAC,GACvC,IAAMC,EAASD,EAAIC,OACnB,EAAKvD,SAAS,CACZyC,gBAAiB,CACfF,IAAKgB,EAAOC,SACZhB,IAAKe,EAAOE,gBAMtBvC,KAAKyB,Y,gCAGL,GAAIzB,KAAKrB,OAASqB,KAAKrB,MAAM6C,OAAQ,CAAC,IAE9BI,EADa5B,KAAKrB,MAAhB6C,OACYI,KACdY,EAASxC,KAAKyC,KAAKpC,IACnBqC,EAAOC,IAASC,YAAYJ,GAE5BK,EAAS7C,KAAKrB,MAAdkE,KAN6B,EAOd7C,KAAKD,MAAMwB,gBAAxBF,EAP2B,EAO3BA,IAAKC,EAPsB,EAOtBA,IACPO,EAAS,IAAID,EAAKE,OAAOT,EAAKC,GAC9BwB,EAAYC,OAAOC,OACvB,GACA,CACEnB,OAAQA,EACRgB,KAAMA,IAGV7C,KAAKK,IAAM,IAAIuB,EAAKqB,IAAIP,EAAMI,M,uCAGhB,IAAD,OACPI,EAAalD,KAAKrB,MAAlBuE,SACR,GAAKA,EACL,OAAOC,IAAMC,SAAS/C,IAAI6C,GAAU,SAAAG,GAClC,GAAKA,EACL,OAAOF,IAAMG,aAAaD,EAAG,CAC3BhD,IAAK,EAAKA,IACVmB,OAAQ,EAAK7C,MAAM6C,OACnB+B,UAAW,EAAKxD,MAAMwB,uB,+BAM1B,IAAMiC,EAAQT,OAAOC,OAAO,GAAIjC,GAChC,OACE,6BACE,yBAAKyC,MAAOA,EAAOC,IAAI,OAAvB,kBAGCzD,KAAK0D,iBACN,yBAAKC,UAAU,UACb,kBAAC,EAAD,Y,GAzFoBR,IAAMrC,WAgGrBK,IAEfA,EAAgByC,aAAe,CAC7Bf,KAAM,GACNzB,cAAe,CACbC,IAAK,UACLC,KAAM,YAERU,6BAA6B,EAC7B6B,SAAS,G,ICjHLC,E,2MACJ/D,MAAQ,CACNgE,mBAAmB,EACnBC,aAAc,GACdC,cAAe,GACfC,YAAa,I,EAEfC,cAAgB,SAACxF,EAAOyF,EAAQ9E,GAAhB,OACd,EAAKR,SAAS,CACZmF,cAAetF,EACfqF,aAAcI,EACdL,mBAAmB,EACnBG,YAAa5E,EAAIG,KAAKC,c,EAG1B2E,QAAU,SAAA1F,GACJ,EAAKoB,MAAMgE,mBACb,EAAKjF,SAAS,CACZiF,mBAAmB,EACnBC,aAAc,Q,wEAOlB,OADAzE,QAAQC,IAAIQ,KAAKD,OAGf,6BACE,mCACA,kBAAC,EAAD,CAAMuE,QAAStE,KAAKD,MAAMO,OAAO4D,cAEjC,kBAAC,EAAD,CAAiBlC,6BAA2B,EAACR,OAAQxB,KAAKrB,MAAM6C,QAC9D,kBAAC,SAAD,CAAQ+C,QAASvE,KAAKmE,cAAezD,KAAM,qBAC3C,kBAAC,aAAD,CACE0D,OAAQpE,KAAKD,MAAMiE,aACnBH,QAAS7D,KAAKD,MAAMgE,kBACpBM,QAASrE,KAAKqE,SAEd,6BACE,4BAAKrE,KAAKD,MAAMkE,cAAcvD,c,GAxCzBI,aAkDJ0D,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZV,GCzCYY,E,iLAZX,OACE,6BACE,yBAAKf,UAAU,OAAMgB,IAAI,oMAEzB,8E,GANW7D,aCEbgD,E,YACJ,WAAYnF,GAAQ,IAAD,8BACjB,4CAAMA,KAURwF,cAAgB,SAACxF,EAAOyF,EAAQQ,GAAhB,OACd,EAAK9F,SAAS,CACZmF,cAAetF,EACfqF,aAAcI,EACdL,mBAAmB,KAfJ,EA6CnBM,QAAU,SAAA1F,GACJ,EAAKoB,MAAMgE,mBACb,EAAKjF,SAAS,CACZiF,mBAAmB,EACnBC,aAAc,QA/ClB,EAAKjE,MAAQ,CACXgE,mBAAmB,EACnBC,aAAc,GACdC,cAAe,GACftE,QAAS,GACTZ,SAAS,EACTF,iBAAkB,aARH,E,iFAiBE,IAAD,OAClBmB,KAAKlB,SAAS,CAAEC,SAAS,IACzBC,IACGC,IACI,uCAFP,6DAGMe,KAAKD,MAAMlB,kBAEb,CACEK,QAAS,CACPC,cAAc,UAAD,OAAYC,oIACzB,+BAA+B,KAIpCC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAIG,KAAKC,YACrB,EAAKZ,SAAS,CACZa,QAASL,EAAIG,KAAKC,gBAIrBE,OAAM,SAAAC,GACL,EAAKf,SAAS,CACZgB,WAAW,oCACXf,SAAS,S,+BAaP,IAAD,OAGP,OACE,6BAEE,kBAAC,EAAD,CAAiBiD,6BAA2B,EAACR,OAAQxB,KAAKrB,MAAM6C,QAC7DxB,KAAKD,MAAMJ,QAAQU,KAAI,SAACwE,EAAUC,GAEjC,OAIE,kBAAC,SAAD,CACEP,QAAS,EAAKJ,cACdY,IAAKD,EACLpE,KAAMmE,EAASnE,KACfM,SAAU,CACRK,IAAKwD,EAASX,YAAY5B,SAC1BhB,IAAKuD,EAASX,YAAY3B,gBAUlC,kBAAC,SAAD,CAAQgC,QAASvE,KAAKmE,cAAezD,KAAM,qBAC3C,kBAAC,aAAD,CACE0D,OAAQpE,KAAKD,MAAMiE,aACnBH,QAAS7D,KAAKD,MAAMgE,kBACpBM,QAASrE,KAAKqE,SAGd,6BAEE,4BAAI,uBAAGW,KAAM,QAAStE,KAAMV,KAAKD,MAAMkE,cAAcvD,MAAOV,KAAKD,MAAMkE,cAAcvD,MAArF,a,GA7FKI,aAsGJ0D,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZV,G,0BC6BYmB,E,YApIb,WAAYtG,GAAQ,IAAD,8BACjB,4CAAMA,KAyBRuG,aAAe,WACblG,IAAMmG,KAAK,uCAAwC,CAACC,QAAQ,EAAKrF,MAAMqF,UACtE/F,MAAK,SAAAgG,GACF,EAAKvG,SAAS,CAAEsG,QAASC,EAAS5F,UAGrCG,OAAM,SAAU0F,GACb/F,QAAQC,IAAI8F,OAjCC,EAsCrBC,YAAc,WACZC,MAAM,wCACLnG,MAAK,SAAAC,GAAQ,OAAOA,EAAImG,UACxBpG,MAAK,SAAAgG,GAAQ,OAAIA,EAAShF,KAAI,SAAAqF,GAC7B,EAAK5G,SAAS,CACZsG,QAASM,EAAON,iBA3CD,EAiDnBO,kBAAmB,WACjBpG,QAAQC,IAAI,gBACZgG,MACK,uCADA,6CAED,EAAKzF,MAAMW,MAEb,CACExB,QAAS,CACPC,cAAc,UAAD,OAAYC,oIACzB,+BAA+B,KAIlCC,MAAK,SAAAgG,GACJ,OAAOA,EAASI,UAEjBpG,MAAK,SAAAC,GAEJ,EAAKR,SAAS,CACZ4B,KAAMpB,EAAIoB,KACVC,SAAUrB,EAAIqB,SAASiF,gBACvBC,IAAKvG,EAAIuG,UApEf,EAAKX,aAAe,EAAKA,aAAaY,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAK/F,MAAQ,CACXW,KAAM,EAAK/B,MAAMqH,MAAMC,OAAOzF,GAC9B4E,QAAS,GACTc,OAAQ,GAPO,E,0EAUNC,EAAWzF,GACtBV,KAAKlB,SAAS,CACZoH,OAAQC,M,mCAGCvB,GACXA,EAAEwB,iBACgBpG,KAAKD,Q,mCAGZ6E,GACX5E,KAAKlB,SAAS,CACZsG,QAASR,EAAEyB,OAAOC,U,+BAsDZ,IAAD,OAKP,OAJAtG,KAAKuF,cAKH,6BACE,4BAAKvF,KAAKD,MAAMW,MAEhB,2BAAIV,KAAKD,MAAMY,SAAf,KAEA,uBAAGgD,UAAU,OAAb,6BACA,uBAAGqB,KAAK,mBAAmBrB,UAAU,OAClC3D,KAAKD,MAAM8F,KAGd,yBAAKlC,UAAU,SACb,uDACA,gDACF,2BAAI3D,KAAKD,MAAMqF,SACb,0BAAMmB,SAAU,kBAAM,EAAKrB,iBACzB,6BACA,6BACA,2BAAOvB,UAAU,UAAjB,oBACmB,6BAEjB,8BACE6C,KAAK,OACLF,MAAOtG,KAAKD,MAAMqF,QAClBqB,SAAUzG,KAAK+F,aACfrF,KAAK,YAGT,6BAEA,kBAAC,IAAD,CACEwF,OAAQlG,KAAKD,MAAMmG,OACnBQ,eAAgB,kBACd,kCAEE,yBAAK/B,IAAI,oEAGbgC,aAAc3G,KAAK2G,aACnBC,cAAe,EACflG,KAAK,WAEP,6BACA,2BAAO8F,KAAK,SAASF,MAAM,kB,GA7HlBxF,a,OCgCN+F,MA1Bf,WACE,OACE,yBAAKlD,UAAU,OACb,4BAAQA,UAAU,cAChB,4BAAI,uBAAGqB,KAAK,KAAR,sBAEN,6BAEE,uBAAGA,KAAK,SAAR,OACA,uBAAGA,KAAK,KAAR,SAGF,yBAAKrB,UAAU,QACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmD,KAAK,QAAQC,UAAWC,IAC/B,kBAAC,IAAD,CAAOC,OAAK,EAACH,KAAK,QAAQC,UAAWG,IACrC,kBAAC,IAAD,CAAOD,OAAK,EAACH,KAAK,QAAQC,UAAWrI,IACrC,kBAAC,IAAD,CAAOuI,OAAK,EAACH,KAAK,IAAIC,UAAWrC,IACjC,kBAAC,IAAD,CAAOoC,KAAM,cAAcC,UAAW9B,QCjB5BkC,QACW,cAA7BC,OAAOzG,SAAS0G,UAEe,UAA7BD,OAAOzG,SAAS0G,UAEhBD,OAAOzG,SAAS0G,SAASrB,MACvB,2DCVNrD,IAAS2E,OAAO,kBAAC,IAAD,KAAQ,kBAAC,EAAD,OAAkBC,SAASC,eAAe,SDyH5D,kBAAmBvF,WACrBA,UAAUwF,cAAcC,MAAMrI,MAAK,SAAAsI,GACjCA,EAAaC,iB","file":"static/js/main.1eb46b73.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport \"./List.css\"\n// import cors from \"cors\";\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      results: [],\n      loading: false\n    };\n  }\n  componentDidMount() {\n    this.getRestaurantsFromApi(\"San Diego\");\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.searchLocationQuery !== prevProps.searchLocationQuery) {\n      this.setState(\n        {\n          results: []\n        },\n        () => this.getRestaurantsFromApi(this.props.searchLocationQuery)\n      );\n    }\n  }\n  getRestaurantsFromApi = locationSearched => {\n    this.setState({ loading: true });\n    axios\n      .get(\n        `${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search?location=${locationSearched}`,\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`,\n            \"Access-Control-Allow-Origin\": true\n          }\n        }\n      )\n      .then(res => {\n        console.log(res.data.businesses);\n        this.setState({ results: res.data.businesses, loading: false });\n      })\n      .catch(err => {\n        this.setState({\n          errorState: `Sorry couldn't find any locations`,\n          loading: false\n        });\n      });\n  };\n  render() {\n     \n    const bathroomList = this.state.results.map(result => {\n    //   console.log(result.id);\n      let pathname = `/detail/${result.id}`\n      return (\n          \n        <div>\n\n          <h2><Link to={pathname}>{result.name}</Link></h2>\n          <p>{result.location.address1}, {result.location.city}</p>\n\n        </div>\n      );\n    });\n    return(\n        <div>\n            {bathroomList}\n        </div>\n    )\n  }\n}\n\nexport default List;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { throwStatement } from \"@babel/types\";\nimport List from \"./List\";\nimport \"./List.css\"\n\nconst mapStyles = {\n  map: {\n    position: \"absolute\",\n    width: \"70%\",\n    height: \"100%\"\n  }\n};\n\nclass CurrentLocation extends React.Component {\n  constructor(props) {\n    super(props);\n    const { lat, lng } = this.props.initialCenter;\n\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n  recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n    const google = this.props.google;\n    const maps = google.maps;\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n    this.loadMap();\n  }\n  loadMap() {\n    if (this.props && this.props.google) {\n      const { google } = this.props;\n      const maps = google.maps;\n      const mapRef = this.refs.map;\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      let { zoom } = this.props;\n      const { lat, lng } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n  renderChildren() {\n    const { children } = this.props;\n    if (!children) return;\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  }\n\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n    return (\n      <div >\n        <div style={style} ref=\"map\">\n          Loading Map...\n        </div>\n        {this.renderChildren()}\n        <div className=\"column\">\n          <List />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CurrentLocation;\n\nCurrentLocation.defaultProps = {\n  zoom: 12,\n  initialCenter: {\n    lat: 44.068203,\n    lng: -114.742043\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};\n","import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport CurrentLocation from \"./Map\";\nimport List from \"./List\"\n\n\nclass Maps extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {},\n    coordinates: []\n  };\n  onMarkerClick = (props, marker, res) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n      coordinates: res.data.businesses\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n  \n  render() {\n    console.log(this.state)\n    return (\n      \n      <div>\n        <h1>Map</h1>\n        <List markers={this.state.result.coordinates}/>\n     \n        <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n          <Marker onClick={this.onMarkerClick} name={\"Current Location\"} />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow>\n        </CurrentLocation>\n      </div>\n    );  \n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBD28JRPlL5AT3GqY_IID3ZeYdLUNnWGqA\"\n})(Maps);\n","import React, { Component } from \"react\";\nimport \"./List.css\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img className=\"home\"src=\"http://instagshop.info/wp-content/uploads/2018/12/bathroom-icon-bathroom-icon-bathroom-icon-bathroom-icon-symbol-nu-print-this-out-put-bathroom-icon-bathroom-icon-bathroom-man-icon-vector.jpg\" />\n\n        <footer>\n        Powered by Yelp API & Google Maps API\n      </footer>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport {  GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport CurrentLocation from \"./Map\";\nimport axios from \"axios\";\n\nclass Maps extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      results: [],\n      loading: false,\n      locationSearched: \"San Diego\"\n    };\n  }\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  componentDidMount() {\n    this.setState({ loading: true });\n    axios\n      .get(\n        `${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/search?location=${\n          this.state.locationSearched\n        }`,\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`,\n            \"Access-Control-Allow-Origin\": true\n          }\n        }\n      )\n      .then(res => {\n        console.log(res.data.businesses);\n        this.setState({\n          results: res.data.businesses\n        });\n      })\n\n      .catch(err => {\n        this.setState({\n          errorState: `Sorry couldn't find any locations`,\n          loading: false\n        });\n      });\n  }\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    // console.log(this.state.results);\n       \n    return (\n      <div>\n    \n        <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n          {this.state.results.map((business, index) => {\n              \n            return (\n                \n  \n       \n              <Marker\n                onClick={this.onMarkerClick}\n                key={index}\n                name={business.name}\n                position={{\n                  lat: business.coordinates.latitude,\n                  lng: business.coordinates.longitude\n                }}\n              \n              />\n              \n             \n\n            );\n          })\n          }\n          <Marker onClick={this.onMarkerClick} name={\"Current Location\"} />\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n            \n          >\n            <div>\n          \n              <h4><a href={'/list'} name={this.state.selectedPlace.name}>{this.state.selectedPlace.name}</a> </h4>\n            </div>\n          </InfoWindow>\n        </CurrentLocation>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBD28JRPlL5AT3GqY_IID3ZeYdLUNnWGqA\"\n})(Maps);\n","import React, { Component } from \"react\";\nimport \"./List.css\";\nimport axios from \"axios\"\nimport StarRatings from \"react-star-ratings\";\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      name: this.props.match.params.id,\n      reviews: [],\n      rating: 5\n    };\n  }\n  changeRating(newRating, name) {\n    this.setState({\n      rating: newRating\n    });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    const newReview = this.state\n    // console.log(newReview)\n  }\n  handleChange(e) {\n    this.setState({\n      reviews: e.target.value\n    });\n    \n  }\n  handleSubmit = () =>{\n    axios.post('http://localhost:3000/new/newreview/', {reviews:this.state.reviews})\n    .then(response => {\n        this.setState({ reviews: response.data });\n    })\n    \n    .catch(function (error){\n        console.log(error);\n    })\n    \n}\n\ngrabReviews = () => {\n  fetch('http://localhost:3000/new/newreview/')\n  .then(res => {return res.json()})\n  .then(response => response.map(review => {\n    this.setState({\n      reviews: review.reviews\n    })\n    // console.log('review' + review.reviews)\n  }))\n \n}\n  componentDidMount =() =>{\n    console.log('in component')\n    fetch(\n      `${\"https://cors-anywhere.herokuapp.com/\"}https://api.yelp.com/v3/businesses/${\n        this.state.name\n      }`,\n      {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_API_KEY}`,\n          \"Access-Control-Allow-Origin\": true\n        }\n      }\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(res => {\n        // console.log(res);\n        this.setState({\n          name: res.name,\n          location: res.location.display_address,\n          url: res.url\n        });\n       \n      });\n  }\n\n  render() {\n    this.grabReviews()\n    // const { rating } = this.state;\n    // const { reviews } = this.state;\n    // console.log(this.state);\n    return (\n      <div>\n        <h1>{this.state.name}</h1>\n\n        <p>{this.state.location} </p>\n    \n        <p className=\"url\">Check them out on yelp - </p>\n        <a href=\"{this.state.url}\" className=\"url\">\n          {this.state.url}\n        </a>\n     \n        <div className=\"field\">\n          <h1>LEAVE A BATHROOM REVIEW</h1>\n          <h2>BATHROOM REVIEWS</h2>\n        <p>{this.state.reviews}</p>\n          <form onSubmit={() => this.handleSubmit()}>\n            <br />\n            <br />\n            <label className=\"review\">\n              Bathroom Review: <br />\n\n              <textarea\n                type=\"text\"\n                value={this.state.reviews}\n                onChange={this.handleChange}\n                name=\"Review\"\n              />\n            </label>\n            <br />\n          \n            <StarRatings\n              rating={this.state.rating}\n              renderStarIcon={() => (\n                <span>\n                  k\n                  <img src=\"https://cdn4.iconfinder.com/data/icons/hotel-1-1/48/8-512.png\" />\n                </span>\n              )}\n              changeRating={this.changeRating}\n              numberOfStars={6}\n              name=\"rating\"\n            />\n            <br />\n            <input type=\"submit\" value=\"Submit\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Detail;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Show from \"./Components/Show\";\nimport List from \"./Components/List\";\nimport Home from \"./Components/Home\"\nimport Test from \"./Components/test\"\nimport Detail from  \"./Components/Detail\"\nimport \"./App.css\";\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1><a href=\"/\">BATHROOM LOCATOR</a></h1>\n      </header>\n      <nav>\n        \n        <a href=\"/test\">MAP</a>\n        <a href=\"/\">HOME</a>\n      </nav>\n\n      <div className=\"main\">\n        <Switch>\n          <Route path=\"/test\" component={Test}/>\n          <Route exact path=\"/maps\" component={Show} />\n          <Route exact path=\"/list\" component={List} />\n          <Route exact path=\"/\" component={Home} />\n          <Route path =\"/detail/:id\" component={Detail}/>\n        </Switch>\n      </div>\n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {\n    BrowserRouter as Router\n  } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}